{"version":3,"file":"bash.js","sources":["../node_modules/highlight.js/lib/languages/bash.js"],"sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Bash\nAuthor: vah <vahtenberg@gmail.com>\nContributrors: Benjamin Pannell <contact@sierrasoftworks.com>\nWebsite: https://www.gnu.org/software/bash/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction bash(hljs) {\n  const VAR = {};\n  const BRACED_VAR = {\n    begin: /\\$\\{/,\n    end:/\\}/,\n    contains: [\n      \"self\",\n      {\n        begin: /:-/,\n        contains: [ VAR ]\n      } // default values\n    ]\n  };\n  Object.assign(VAR,{\n    className: 'variable',\n    variants: [\n      {begin: concat(/\\$[\\w\\d#@][\\w\\d_]*/,\n        // negative look-ahead tries to avoid matching patterns that are not\n        // Perl at all like $ident$, @ident@, etc.\n        `(?![\\\\w\\\\d])(?![$])`) },\n      BRACED_VAR\n    ]\n  });\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\(/, end: /\\)/,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const HERE_DOC = {\n    begin: /<<-?\\s*(?=\\w+)/,\n    starts: {\n      contains: [\n        hljs.END_SAME_AS_BEGIN({\n          begin: /(\\w+)/,\n          end: /(\\w+)/,\n          className: 'string'\n        })\n      ]\n    }\n  };\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      SUBST\n    ]\n  };\n  SUBST.contains.push(QUOTE_STRING);\n  const ESCAPED_QUOTE = {\n    className: '',\n    begin: /\\\\\"/\n\n  };\n  const APOS_STRING = {\n    className: 'string',\n    begin: /'/, end: /'/\n  };\n  const ARITHMETIC = {\n    begin: /\\$\\(\\(/,\n    end: /\\)\\)/,\n    contains: [\n      { begin: /\\d+#[0-9a-f]+/, className: \"number\" },\n      hljs.NUMBER_MODE,\n      VAR\n    ]\n  };\n  const SH_LIKE_SHELLS = [\n    \"fish\",\n    \"bash\",\n    \"zsh\",\n    \"sh\",\n    \"csh\",\n    \"ksh\",\n    \"tcsh\",\n    \"dash\",\n    \"scsh\",\n  ];\n  const KNOWN_SHEBANG = hljs.SHEBANG({\n    binary: `(${SH_LIKE_SHELLS.join(\"|\")})`,\n    relevance: 10\n  });\n  const FUNCTION = {\n    className: 'function',\n    begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n    returnBegin: true,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {begin: /\\w[\\w\\d_]*/})],\n    relevance: 0\n  };\n\n  return {\n    name: 'Bash',\n    aliases: ['sh', 'zsh'],\n    keywords: {\n      $pattern: /\\b[a-z._-]+\\b/,\n      keyword:\n        'if then else elif fi for while in do done case esac function',\n      literal:\n        'true false',\n      built_in:\n        // Shell built-ins\n        // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n        'break cd continue eval exec exit export getopts hash pwd readonly return shift test times ' +\n        'trap umask unset ' +\n        // Bash built-ins\n        'alias bind builtin caller command declare echo enable help let local logout mapfile printf ' +\n        'read readarray source type typeset ulimit unalias ' +\n        // Shell modifiers\n        'set shopt ' +\n        // Zsh built-ins\n        'autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles ' +\n        'compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate ' +\n        'fc fg float functions getcap getln history integer jobs kill limit log noglob popd print ' +\n        'pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit ' +\n        'unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof ' +\n        'zpty zregexparse zsocket zstyle ztcp'\n    },\n    contains: [\n      KNOWN_SHEBANG, // to catch known shells and boost relevancy\n      hljs.SHEBANG(), // to catch unknown shells but still highlight the shebang\n      FUNCTION,\n      ARITHMETIC,\n      hljs.HASH_COMMENT_MODE,\n      HERE_DOC,\n      QUOTE_STRING,\n      ESCAPED_QUOTE,\n      APOS_STRING,\n      VAR\n    ]\n  };\n}\n\nmodule.exports = bash;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AASA,gBAAgB,IAAI;AAClB,MAAI,CAAC;AAAI,WAAO;AAChB,MAAI,OAAO,OAAO;AAAU,WAAO;AAEnC,SAAO,GAAG;AAAA;AAOZ,mBAAmB,MAAM;AACvB,QAAM,SAAS,KAAK,IAAI,CAAC,MAAM,OAAO,IAAI,KAAK;AAC/C,SAAO;AAAA;AAYT,cAAc,MAAM;AAClB,QAAM,MAAM;AACZ,QAAM,aAAa;AAAA,IACjB,OAAO;AAAA,IACP,KAAI;AAAA,IACJ,UAAU;AAAA,MACR;AAAA,MACA;AAAA,QACE,OAAO;AAAA,QACP,UAAU,CAAE;AAAA;AAAA;AAAA;AAIlB,SAAO,OAAO,KAAI;AAAA,IAChB,WAAW;AAAA,IACX,UAAU;AAAA,MACR,EAAC,OAAO,OAAO,sBAGb;AAAA,MACF;AAAA;AAAA;AAIJ,QAAM,QAAQ;AAAA,IACZ,WAAW;AAAA,IACX,OAAO;AAAA,IAAQ,KAAK;AAAA,IACpB,UAAU,CAAC,KAAK;AAAA;AAElB,QAAM,WAAW;AAAA,IACf,OAAO;AAAA,IACP,QAAQ;AAAA,MACN,UAAU;AAAA,QACR,KAAK,kBAAkB;AAAA,UACrB,OAAO;AAAA,UACP,KAAK;AAAA,UACL,WAAW;AAAA;AAAA;AAAA;AAAA;AAKnB,QAAM,eAAe;AAAA,IACnB,WAAW;AAAA,IACX,OAAO;AAAA,IAAK,KAAK;AAAA,IACjB,UAAU;AAAA,MACR,KAAK;AAAA,MACL;AAAA,MACA;AAAA;AAAA;AAGJ,QAAM,SAAS,KAAK;AACpB,QAAM,gBAAgB;AAAA,IACpB,WAAW;AAAA,IACX,OAAO;AAAA;AAGT,QAAM,cAAc;AAAA,IAClB,WAAW;AAAA,IACX,OAAO;AAAA,IAAK,KAAK;AAAA;AAEnB,QAAM,aAAa;AAAA,IACjB,OAAO;AAAA,IACP,KAAK;AAAA,IACL,UAAU;AAAA,MACR,EAAE,OAAO,iBAAiB,WAAW;AAAA,MACrC,KAAK;AAAA,MACL;AAAA;AAAA;AAGJ,QAAM,iBAAiB;AAAA,IACrB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAEF,QAAM,gBAAgB,KAAK,QAAQ;AAAA,IACjC,QAAQ,IAAI,eAAe,KAAK;AAAA,IAChC,WAAW;AAAA;AAEb,QAAM,WAAW;AAAA,IACf,WAAW;AAAA,IACX,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU,CAAC,KAAK,QAAQ,KAAK,YAAY,EAAC,OAAO;AAAA,IACjD,WAAW;AAAA;AAGb,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAC,MAAM;AAAA,IAChB,UAAU;AAAA,MACR,UAAU;AAAA,MACV,SACE;AAAA,MACF,SACE;AAAA,MACF,UAGE;AAAA;AAAA,IAeJ,UAAU;AAAA,MACR;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA;IAKN,SAAiB;;;;;;;"}