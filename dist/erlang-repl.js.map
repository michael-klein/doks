{"version":3,"file":"erlang-repl.js","sources":["../node_modules/highlight.js/lib/languages/erlang-repl.js"],"sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Erlang REPL\nAuthor: Sergey Ignatov <sergey@ignatov.spb.su>\nWebsite: https://www.erlang.org\nCategory: functional\n*/\n\n/** @type LanguageFn */\nfunction erlangRepl(hljs) {\n  return {\n    name: 'Erlang REPL',\n    keywords: {\n      built_in:\n        'spawn spawn_link self',\n      keyword:\n        'after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if ' +\n        'let not of or orelse|10 query receive rem try when xor'\n    },\n    contains: [\n      {\n        className: 'meta',\n        begin: '^[0-9]+> ',\n        relevance: 10\n      },\n      hljs.COMMENT('%', '$'),\n      {\n        className: 'number',\n        begin: '\\\\b(\\\\d+(_\\\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\\\d+(_\\\\d+)*(\\\\.\\\\d+(_\\\\d+)*)?([eE][-+]?\\\\d+)?)',\n        relevance: 0\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        begin: concat(\n          /\\?(::)?/,\n          /([A-Z]\\w*)/, // at least one identifier\n          /((::)[A-Z]\\w*)*/ // perhaps more\n        )\n      },\n      {\n        begin: '->'\n      },\n      {\n        begin: 'ok'\n      },\n      {\n        begin: '!'\n      },\n      {\n        begin: '(\\\\b[a-z\\'][a-zA-Z0-9_\\']*:[a-z\\'][a-zA-Z0-9_\\']*)|(\\\\b[a-z\\'][a-zA-Z0-9_\\']*)',\n        relevance: 0\n      },\n      {\n        begin: '[A-Z][a-zA-Z0-9_\\']*',\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = erlangRepl;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AASA,gBAAgB,IAAI;AAClB,MAAI,CAAC;AAAI,WAAO;AAChB,MAAI,OAAO,OAAO;AAAU,WAAO;AAEnC,SAAO,GAAG;AAAA;AAOZ,mBAAmB,MAAM;AACvB,QAAM,SAAS,KAAK,IAAI,CAAC,MAAM,OAAO,IAAI,KAAK;AAC/C,SAAO;AAAA;AAWT,oBAAoB,MAAM;AACxB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,UAAU;AAAA,MACR,UACE;AAAA,MACF,SACE;AAAA;AAAA,IAGJ,UAAU;AAAA,MACR;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,WAAW;AAAA;AAAA,MAEb,KAAK,QAAQ,KAAK;AAAA,MAClB;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,WAAW;AAAA;AAAA,MAEb,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,QACE,OAAO,OACL,WACA,cACA;AAAA;AAAA,MAGJ;AAAA,QACE,OAAO;AAAA;AAAA,MAET;AAAA,QACE,OAAO;AAAA;AAAA,MAET;AAAA,QACE,OAAO;AAAA;AAAA,MAET;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA;AAAA,MAEb;AAAA,QACE,OAAO;AAAA,QACP,WAAW;AAAA;AAAA;AAAA;AAAA;IAMnB,eAAiB;;;;;;;"}