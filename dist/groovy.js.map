{"version":3,"file":"groovy.js","sources":["../node_modules/highlight.js/lib/languages/groovy.js"],"sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\n Language: Groovy\n Author: Guillaume Laforge <glaforge@gmail.com>\n Description: Groovy programming language implementation inspired from Vsevolod's Java mode\n Website: https://groovy-lang.org\n */\n\nfunction variants(variants, obj = {}) {\n  obj.variants = variants;\n  return obj;\n}\n\nfunction groovy(hljs) {\n  const IDENT_RE = '[A-Za-z0-9_$]+';\n  const COMMENT = variants([\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.COMMENT(\n      '/\\\\*\\\\*',\n      '\\\\*/',\n      {\n        relevance: 0,\n        contains: [\n          {\n            // eat up @'s in emails to prevent them to be recognized as doctags\n            begin: /\\w+@/,\n            relevance: 0\n          },\n          {\n            className: 'doctag',\n            begin: '@[A-Za-z]+'\n          }\n        ]\n      }\n    )\n  ]);\n  const REGEXP = {\n    className: 'regexp',\n    begin: /~?\\/[^\\/\\n]+\\//,\n    contains: [ hljs.BACKSLASH_ESCAPE ]\n  };\n  const NUMBER = variants([\n    hljs.BINARY_NUMBER_MODE,\n    hljs.C_NUMBER_MODE\n  ]);\n  const STRING = variants([\n    {\n      begin: /\"\"\"/,\n      end: /\"\"\"/\n    },\n    {\n      begin: /'''/,\n      end: /'''/\n    },\n    {\n      begin: \"\\\\$/\",\n      end: \"/\\\\$\",\n      relevance: 10\n    },\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE\n  ],\n  {\n    className: \"string\"\n  }\n  );\n\n  return {\n    name: 'Groovy',\n    keywords: {\n      built_in: 'this super',\n      literal: 'true false null',\n      keyword:\n            'byte short char int long boolean float double void ' +\n            // groovy specific keywords\n            'def as in assert trait ' +\n            // common keywords with Java\n            'abstract static volatile transient public private protected synchronized final ' +\n            'class interface enum if else for while switch case break default continue ' +\n            'throw throws try catch finally implements extends new import package return instanceof'\n    },\n    contains: [\n      hljs.SHEBANG({\n        binary: \"groovy\",\n        relevance: 10\n      }),\n      COMMENT,\n      STRING,\n      REGEXP,\n      NUMBER,\n      {\n        className: 'class',\n        beginKeywords: 'class interface trait enum',\n        end: /\\{/,\n        illegal: ':',\n        contains: [\n          {\n            beginKeywords: 'extends implements'\n          },\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '@[A-Za-z]+',\n        relevance: 0\n      },\n      {\n        // highlight map keys and named parameters as attrs\n        className: 'attr',\n        begin: IDENT_RE + '[ \\t]*:',\n        relevance: 0\n      },\n      {\n        // catch middle element of the ternary operator\n        // to avoid highlight it as a label, named parameter, or map key\n        begin: /\\?/,\n        end: /:/,\n        relevance: 0,\n        contains: [\n          COMMENT,\n          STRING,\n          REGEXP,\n          NUMBER,\n          'self'\n        ]\n      },\n      {\n        // highlight labeled statements\n        className: 'symbol',\n        begin: '^[ \\t]*' + lookahead(IDENT_RE + ':'),\n        excludeBegin: true,\n        end: IDENT_RE + ':',\n        relevance: 0\n      }\n    ],\n    illegal: /#|<\\//\n  };\n}\n\nmodule.exports = groovy;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AASA,gBAAgB,IAAI;AAClB,MAAI,CAAC;AAAI,WAAO;AAChB,MAAI,OAAO,OAAO;AAAU,WAAO;AAEnC,SAAO,GAAG;AAAA;AAOZ,mBAAmB,IAAI;AACrB,SAAO,OAAO,OAAO,IAAI;AAAA;AAO3B,mBAAmB,MAAM;AACvB,QAAM,SAAS,KAAK,IAAI,CAAC,MAAM,OAAO,IAAI,KAAK;AAC/C,SAAO;AAAA;AAUT,kBAAkB,WAAU,MAAM,IAAI;AACpC,MAAI,WAAW;AACf,SAAO;AAAA;AAGT,gBAAgB,MAAM;AACpB,QAAM,WAAW;AACjB,QAAM,UAAU,SAAS;AAAA,IACvB,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK,QACH,WACA,QACA;AAAA,MACE,WAAW;AAAA,MACX,UAAU;AAAA,QACR;AAAA,UAEE,OAAO;AAAA,UACP,WAAW;AAAA;AAAA,QAEb;AAAA,UACE,WAAW;AAAA,UACX,OAAO;AAAA;AAAA;AAAA;AAAA;AAMjB,QAAM,SAAS;AAAA,IACb,WAAW;AAAA,IACX,OAAO;AAAA,IACP,UAAU,CAAE,KAAK;AAAA;AAEnB,QAAM,SAAS,SAAS;AAAA,IACtB,KAAK;AAAA,IACL,KAAK;AAAA;AAEP,QAAM,SAAS,SAAS;AAAA,IACtB;AAAA,MACE,OAAO;AAAA,MACP,KAAK;AAAA;AAAA,IAEP;AAAA,MACE,OAAO;AAAA,MACP,KAAK;AAAA;AAAA,IAEP;AAAA,MACE,OAAO;AAAA,MACP,KAAK;AAAA,MACL,WAAW;AAAA;AAAA,IAEb,KAAK;AAAA,IACL,KAAK;AAAA,KAEP;AAAA,IACE,WAAW;AAAA;AAIb,SAAO;AAAA,IACL,MAAM;AAAA,IACN,UAAU;AAAA,MACR,UAAU;AAAA,MACV,SAAS;AAAA,MACT,SACM;AAAA;AAAA,IAQR,UAAU;AAAA,MACR,KAAK,QAAQ;AAAA,QACX,QAAQ;AAAA,QACR,WAAW;AAAA;AAAA,MAEb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE,WAAW;AAAA,QACX,eAAe;AAAA,QACf,KAAK;AAAA,QACL,SAAS;AAAA,QACT,UAAU;AAAA,UACR;AAAA,YACE,eAAe;AAAA;AAAA,UAEjB,KAAK;AAAA;AAAA;AAAA,MAGT;AAAA,QACE,WAAW;AAAA,QACX,OAAO;AAAA,QACP,WAAW;AAAA;AAAA,MAEb;AAAA,QAEE,WAAW;AAAA,QACX,OAAO,WAAW;AAAA,QAClB,WAAW;AAAA;AAAA,MAEb;AAAA,QAGE,OAAO;AAAA,QACP,KAAK;AAAA,QACL,WAAW;AAAA,QACX,UAAU;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA;AAAA;AAAA,MAGJ;AAAA,QAEE,WAAW;AAAA,QACX,OAAO,WAAY,UAAU,WAAW;AAAA,QACxC,cAAc;AAAA,QACd,KAAK,WAAW;AAAA,QAChB,WAAW;AAAA;AAAA;AAAA,IAGf,SAAS;AAAA;AAAA;IAIb,WAAiB;;;;;;;"}