{"version":3,"file":"http.js","sources":["../node_modules/highlight.js/lib/languages/http.js"],"sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: HTTP\nDescription: HTTP request and response headers with automatic body highlighting\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nCategory: common, protocols\nWebsite: https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview\n*/\n\nfunction http(hljs) {\n  const VERSION = 'HTTP/(2|1\\\\.[01])';\n  const HEADER_NAME = /[A-Za-z][A-Za-z0-9-]*/;\n  const HEADER = {\n    className: 'attribute',\n    begin: concat('^', HEADER_NAME, '(?=\\\\:\\\\s)'),\n    starts: {\n      contains: [\n        {\n          className: \"punctuation\",\n          begin: /: /,\n          relevance: 0,\n          starts: {\n            end: '$',\n            relevance: 0\n          }\n        }\n      ]\n    }\n  };\n  const HEADERS_AND_BODY = [\n    HEADER,\n    {\n      begin: '\\\\n\\\\n',\n      starts: { subLanguage: [], endsWithParent: true }\n    }\n  ];\n\n  return {\n    name: 'HTTP',\n    aliases: ['https'],\n    illegal: /\\S/,\n    contains: [\n      // response\n      {\n        begin: '^(?=' + VERSION + \" \\\\d{3})\",\n        end: /$/,\n        contains: [\n          {\n            className: \"meta\",\n            begin: VERSION\n          },\n          {\n            className: 'number', begin: '\\\\b\\\\d{3}\\\\b'\n          }\n        ],\n        starts: {\n          end: /\\b\\B/,\n          illegal: /\\S/,\n          contains: HEADERS_AND_BODY\n        }\n      },\n      // request\n      {\n        begin: '(?=^[A-Z]+ (.*?) ' + VERSION + '$)',\n        end: /$/,\n        contains: [\n          {\n            className: 'string',\n            begin: ' ',\n            end: ' ',\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: \"meta\",\n            begin: VERSION\n          },\n          {\n            className: 'keyword',\n            begin: '[A-Z]+'\n          }\n        ],\n        starts: {\n          end: /\\b\\B/,\n          illegal: /\\S/,\n          contains: HEADERS_AND_BODY\n        }\n      },\n      // to allow headers to work even without a preamble\n      hljs.inherit(HEADER, {\n        relevance: 0\n      })\n    ]\n  };\n}\n\nmodule.exports = http;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AASA,gBAAgB,IAAI;AAClB,MAAI,CAAC;AAAI,WAAO;AAChB,MAAI,OAAO,OAAO;AAAU,WAAO;AAEnC,SAAO,GAAG;AAAA;AAOZ,mBAAmB,MAAM;AACvB,QAAM,SAAS,KAAK,IAAI,CAAC,MAAM,OAAO,IAAI,KAAK;AAC/C,SAAO;AAAA;AAWT,cAAc,MAAM;AAClB,QAAM,UAAU;AAChB,QAAM,cAAc;AACpB,QAAM,SAAS;AAAA,IACb,WAAW;AAAA,IACX,OAAO,OAAO,KAAK,aAAa;AAAA,IAChC,QAAQ;AAAA,MACN,UAAU;AAAA,QACR;AAAA,UACE,WAAW;AAAA,UACX,OAAO;AAAA,UACP,WAAW;AAAA,UACX,QAAQ;AAAA,YACN,KAAK;AAAA,YACL,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAMrB,QAAM,mBAAmB;AAAA,IACvB;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,QAAQ,EAAE,aAAa,IAAI,gBAAgB;AAAA;AAAA;AAI/C,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,MAER;AAAA,QACE,OAAO,SAAS,UAAU;AAAA,QAC1B,KAAK;AAAA,QACL,UAAU;AAAA,UACR;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA;AAAA,UAET;AAAA,YACE,WAAW;AAAA,YAAU,OAAO;AAAA;AAAA;AAAA,QAGhC,QAAQ;AAAA,UACN,KAAK;AAAA,UACL,SAAS;AAAA,UACT,UAAU;AAAA;AAAA;AAAA,MAId;AAAA,QACE,OAAO,sBAAsB,UAAU;AAAA,QACvC,KAAK;AAAA,QACL,UAAU;AAAA,UACR;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA,YACP,KAAK;AAAA,YACL,cAAc;AAAA,YACd,YAAY;AAAA;AAAA,UAEd;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA;AAAA,UAET;AAAA,YACE,WAAW;AAAA,YACX,OAAO;AAAA;AAAA;AAAA,QAGX,QAAQ;AAAA,UACN,KAAK;AAAA,UACL,SAAS;AAAA,UACT,UAAU;AAAA;AAAA;AAAA,MAId,KAAK,QAAQ,QAAQ;AAAA,QACnB,WAAW;AAAA;AAAA;AAAA;AAAA;IAMnB,SAAiB;;;;;;;"}