import{R as Routes,a as Route,u as useParams,f as useObservableAndState,d as documents$,p as pathBrowserify,g as projects$,M as MarkdownEditor}from"./doks.js";import{lazy,useMemo,Fragment as Fragment$1}from"react";import{combineLatest,map}from"rxjs";import{i as jsxs,j as jsx,F as Fragment,G as CircularProgress}from"./main.js";import{C as Container}from"./Container.js";import"react-dom";import"rxjs/operators";const DocFetcher=lazy((()=>import("./doc_fetcher.js"))),Navbar=lazy((()=>import("./navbar.js"))),DocumentEditor=()=>{const t=useParams(),[e]=useObservableAndState((t=>combineLatest([t,documents$]).pipe(map((([t,e])=>{var r;return e.get(null==(r=t[0])?void 0:r.contentSlug)})))),[t]),r=!!t.contentSlug,o=useMemo((()=>{if(e)return pathBrowserify.join(projects$.value.get(t.projectSlug).path,e.path)}),[e,t]);return jsx(Fragment,{children:r&&!e?jsx(CircularProgress,{}):jsx(MarkdownEditor,{initial:r?e.mdx:"# hello world",path:o},r?e.mdx:"# hello world")})},Layout=({children:t})=>jsxs(Fragment$1,{children:[jsx(DocFetcher,{mode:"editor"}),jsx(Navbar,{}),jsx(Container,{sx:{marginTop:3,marginBottom:3,flex:"auto",display:"flex",maxWidth:"100% !important"},children:t})]}),Editor=()=>jsxs(Routes,{children:[jsx(Route,{path:"/:projectSlug",element:jsx(Layout,{children:jsx(DocumentEditor,{})})}),jsx(Route,{path:"/:projectSlug/:contentSlug",element:jsx(Layout,{children:jsx(DocumentEditor,{})})}),jsx(Route,{path:"/",element:jsx(Layout,{children:jsx(DocumentEditor,{})})})]});export{Editor,Editor as default};