import{a as jsxs,R as Routes,j as jsx,b as Route,u as useComponentContext,V as useParams,W as useObservableAndState,ah as documents$,aD as pathBrowserify,X as projects$,at as Fragment,a3 as CircularProgress}from"./main.js";import{lazy,useMemo,Fragment as Fragment$1}from"react";import{combineLatest,map}from"rxjs";import{C as Container}from"./Container.js";import"react-dom";import"rxjs/operators";const DocFetcher=lazy((()=>import("./doc_fetcher.js"))),DocumentEditor=()=>{const{MarkdownEditor:t}=useComponentContext(),e=useParams(),[o]=useObservableAndState((t=>combineLatest([t,documents$]).pipe(map((([t,e])=>{var o;return e.get(null==(o=t[0])?void 0:o.contentSlug)})))),[e]),r=!!e.contentSlug,s=useMemo((()=>{if(o)return pathBrowserify.join(projects$.value.get(e.projectSlug).path,o.path)}),[o,e]);return jsx(Fragment,{children:r&&!o?jsx(CircularProgress,{}):jsx(t,{initial:r?o.mdx:"# hello world",path:s},r?o.mdx:"# hello world")})},Layout=({children:t})=>{const{Navbar:e,MarkdownEditor:o}=useComponentContext();return jsxs(Fragment$1,{children:[jsx(DocFetcher,{mode:"editor"}),jsx(e,{}),jsx(Container,{sx:{marginTop:3,marginBottom:3,flex:"auto",display:"flex",maxWidth:"100% !important"},children:t})]})},Editor=()=>jsxs(Routes,{children:[jsx(Route,{path:"/:projectSlug",element:jsx(Layout,{children:jsx(DocumentEditor,{})})}),jsx(Route,{path:"/:projectSlug/:contentSlug",element:jsx(Layout,{children:jsx(DocumentEditor,{})})}),jsx(Route,{path:"/",element:jsx(Layout,{children:jsx(DocumentEditor,{})})})]});export{Editor,Editor as default};