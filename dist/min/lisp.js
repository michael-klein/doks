function _mergeNamespaces(e,n){return n.forEach((function(n){n&&"string"!=typeof n&&!Array.isArray(n)&&Object.keys(n).forEach((function(i){if("default"!==i&&!(i in e)){var a=Object.getOwnPropertyDescriptor(n,i);Object.defineProperty(e,i,a.get?a:{enumerable:!0,get:function(){return n[i]}})}}))})),Object.freeze(e)}function lisp(e){var n="[a-zA-Z_\\-+\\*\\/<=>&#][a-zA-Z0-9_\\-+*\\/<=>&#!]*",i="\\|[^]*?\\|",a="(-|\\+)?\\d+(\\.\\d+|\\/\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\+|-)?\\d+)?",r={className:"literal",begin:"\\b(t{1}|nil)\\b"},t={className:"number",variants:[{begin:a,relevance:0},{begin:"#(b|B)[0-1]+(/[0-1]+)?"},{begin:"#(o|O)[0-7]+(/[0-7]+)?"},{begin:"#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?"},{begin:"#(c|C)\\("+a+" +"+a,end:"\\)"}]},s=e.inherit(e.QUOTE_STRING_MODE,{illegal:null}),l=e.COMMENT(";","$",{relevance:0}),b={begin:"\\*",end:"\\*"},c={className:"symbol",begin:"[:&]"+n},g={begin:n,relevance:0},o={begin:i},f={contains:[t,s,b,c,{begin:"\\(",end:"\\)",contains:["self",r,s,t,g]},g],variants:[{begin:"['`]\\(",end:"\\)"},{begin:"\\(quote ",end:"\\)",keywords:{name:"quote"}},{begin:"'"+i}]},d={variants:[{begin:"'"+n},{begin:"#'"+n+"(::"+n+")*"}]},u={begin:"\\(\\s*",end:"\\)"},p={endsWithParent:!0,relevance:0};return u.contains=[{className:"name",variants:[{begin:n,relevance:0},{begin:i}]},p],p.contains=[f,d,u,r,t,s,l,b,c,o,g],{name:"Lisp",illegal:/\S/,contains:[t,e.SHEBANG(),r,s,l,f,d,u,g]}}var lisp_1=lisp,lisp$1=Object.freeze(_mergeNamespaces({__proto__:null,[Symbol.toStringTag]:"Module",default:lisp_1},[lisp_1]));export{lisp$1 as l};