import*as React from"react";import{createContext,useContext,useState,useEffect,useMemo}from"react";import{d as useTheme,j as jsx,T as ThemeContext,_ as _extends,e as useTheme$1,f as ThemeContext$1,h as createTheme}from"./main.js";const hasSymbol="function"==typeof Symbol&&Symbol.for;var nested=hasSymbol?Symbol.for("mui.nested"):"__THEME_NESTED__";function mergeOuterLocalTheme(e,o){if("function"==typeof o){return o(e)}return _extends({},e,o)}function ThemeProvider$1(e){const{children:o,theme:t}=e,r=useTheme(),n=React.useMemo((()=>{const e=null===r?t:mergeOuterLocalTheme(r,t);return null!=e&&(e[nested]=null!==r),e}),[t,r]);return jsx(ThemeContext.Provider,{value:n,children:o})}function InnerThemeProvider(e){const o=useTheme$1();return jsx(ThemeContext$1.Provider,{value:"object"==typeof o?o:{},children:e.children})}function ThemeProvider(e){const{children:o,theme:t}=e;return jsx(ThemeProvider$1,{theme:t,children:jsx(InnerThemeProvider,{children:o})})}createTheme({palette:{mode:"light",primary:{main:"#0d47a1"},secondary:{main:"#ad1457"}}});const ColorModeContext=createContext({toggleColorMode:()=>{},mode:void 0}),useColorModeContext=()=>useContext(ColorModeContext),COLOR_MODE_KEY="color-mode",DocsThemeProvider=({children:e})=>{var o;const[t,r]=useState(null!=(o=localStorage.getItem("color-mode"))?o:"light");useEffect((()=>{localStorage.setItem("color-mode",t)}),[t]);const n=useMemo((()=>({toggleColorMode:()=>{r((e=>"light"===e?"dark":"light"))},mode:t})),[t]),m=useMemo((()=>createTheme({palette:{mode:t,primary:{main:"#0d47a1"},secondary:{main:"#ad1457"}}})),[t]);return jsx(ColorModeContext.Provider,{value:n,children:jsx(ThemeProvider,{theme:m,children:e})})};export{DocsThemeProvider as D,useColorModeContext as u};