{"version":3,"file":"theme.js","sources":["../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","../src/css/theme.tsx"],"sourcesContent":["const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested'; // To support composition of theme.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n\n    return mergedTheme;\n  }\n\n  return _extends({}, outerTheme, localTheme);\n}\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\n\n\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\n\nexport default ThemeProvider;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useTheme from '../useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction InnerThemeProvider(props) {\n  const theme = useTheme();\n  return /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n    value: typeof theme === 'object' ? theme : {},\n    children: props.children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? InnerThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node\n} : void 0;\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n */\n\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: localTheme,\n    children: /*#__PURE__*/_jsx(InnerThemeProvider, {\n      children: children\n    })\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\n\nexport default ThemeProvider;","import { PaletteMode } from \"@mui/material\";\nimport { createTheme } from \"@mui/material/styles\";\nimport {\n  createContext,\n  ReactChild,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { ThemeProvider } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  palette: {\n    mode: \"light\",\n    primary: {\n      main: \"#0d47a1\",\n    },\n    secondary: {\n      main: \"#ad1457\",\n    },\n  },\n});\nexport type DoksTheme = typeof theme;\n\nconst ColorModeContext = createContext({\n  toggleColorMode: () => {},\n  mode: undefined as PaletteMode,\n});\nexport const useColorModeContext = () => {\n  return useContext(ColorModeContext);\n};\nconst COLOR_MODE_KEY = \"color-mode\";\nexport const DocsThemeProvider = ({ children }: { children: ReactChild }) => {\n  const [mode, setMode] = useState<PaletteMode>(\n    (localStorage.getItem(COLOR_MODE_KEY) as PaletteMode) ?? \"light\"\n  );\n  useEffect(() => {\n    localStorage.setItem(COLOR_MODE_KEY, mode);\n  }, [mode]);\n  const value = useMemo(() => {\n    return {\n      toggleColorMode: () => {\n        setMode((m) => (m === \"light\" ? \"dark\" : \"light\"));\n      },\n      mode,\n    };\n  }, [mode]);\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n          primary: {\n            main: \"#0d47a1\",\n          },\n          secondary: {\n            main: \"#ad1457\",\n          },\n        },\n      }),\n    [mode]\n  );\n  return (\n    <ColorModeContext.Provider value={value}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n};\n"],"names":["_jsx","useTheme","StyledEngineThemeContext","MuiThemeProvider","createTheme","palette","mode","primary","main","secondary","ColorModeContext","createContext","toggleColorMode","undefined","useColorModeContext","useContext","COLOR_MODE_KEY","DocsThemeProvider","children","setMode","useState","localStorage","getItem","setItem","value","useMemo","m","theme"],"mappings":";;;AAAA,MAAM,YAAY,OAAO,WAAW,cAAc,OAAO;AACzD,aAAe,YAAY,OAAO,IAAI,gBAAgB;ACStD,8BAA8B,YAAY,YAAY;AACpD,MAAI,OAAO,eAAe,YAAY;AACpC,UAAM,cAAc,WAAW;AAQ/B,WAAO;AAAA;AAGT,SAAO,SAAS,IAAI,YAAY;AAAA;AASlC,yBAAuB,OAAO;AAC5B,QAAM;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACL;AACJ,QAAM,aAAa;AAQnB,QAAM,QAAQ,MAAM,QAAQ,MAAM;AAChC,UAAM,SAAS,eAAe,OAAO,aAAa,qBAAqB,YAAY;AAEnF,QAAI,UAAU,MAAM;AAClB,aAAO,UAAU,eAAe;AAAA;AAGlC,WAAO;AAAA,KACN,CAAC,YAAY;AAChB,SAAoBA,oBAAK,aAAa,UAAU;AAAA,IAC9C,OAAO;AAAA,IACP;AAAA;AAAA;AChDJ,4BAA4B,OAAO;AACjC,QAAM,QAAQC;AACd,SAAoBD,oBAAKE,eAAyB,UAAU;AAAA,IAC1D,OAAO,OAAO,UAAU,WAAW,QAAQ;AAAA,IAC3C,UAAU,MAAM;AAAA;AAAA;AAepB,uBAAuB,OAAO;AAC5B,QAAM;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,MACL;AACJ,SAAoBF,oBAAKG,iBAAkB;AAAA,IACzC,OAAO;AAAA,IACP,UAAuBH,oBAAK,oBAAoB;AAAA,MAC9C;AAAA;AAAA;AAAA;ACvBQI,YAAY;AAAA,EACxBC,SAAS;AAAA,IACPC,MAAM;AAAA,IACNC,SAAS;AAAA,MACPC,MAAM;AAAA;AAAA,IAERC,WAAW;AAAA,MACTD,MAAM;AAAA;AAAA;AAAA;AAMZ,MAAME,mBAAmBC,cAAc;AAAA,EACrCC,iBAAiB,MAAM;AAAA;AAAA,EACvBN,MAAMO;AAAAA;MAEKC,sBAAsB,MAAM;SAChCC,WAAWL;AAAAA;AAEpB,MAAMM,iBAAiB;MACVC,oBAAoB,CAAC;AAAA,EAAEC;AAAAA,MAAyC;;QACrE,CAACZ,MAAMa,WAAWC,SACrBC,mBAAaC,QAAQN,oBAArBK,YAAwD;YAEjD,MAAM;iBACDE,QAAQP,gBAAgBV;AAAAA,KACpC,CAACA;QACEkB,QAAQC,QAAQ,MAAM;WACnB;AAAA,MACLb,iBAAiB,MAAM;gBACZc,OAAOA,MAAM,UAAU,SAAS;AAAA;AAAA,MAE3CpB;AAAAA;AAAAA,KAED,CAACA;QACEqB,SAAQF,QACZ,MACErB,YAAY;AAAA,IACVC,SAAS;AAAA,MACPC;AAAAA,MACAC,SAAS;AAAA,QACPC,MAAM;AAAA;AAAA,MAERC,WAAW;AAAA,QACTD,MAAM;AAAA;AAAA;AAAA,MAId,CAACF;6BAGA,iBAAiB;IAAS;AAAA,kCACxB;MAAc,OAAOqB;AAAAA;;;;;"}