{"version":3,"file":"use_observable_and_state.js","sources":["../src/hooks/use_observable_and_state.ts"],"sourcesContent":["import { useObservable, useObservableState } from \"observable-hooks\";\nimport { Observable } from \"rxjs\";\n\nexport function useObservableAndState<TOutput>(\n  init: () => Observable<TOutput>\n): [TOutput, Observable<TOutput>];\nexport function useObservableAndState<TOutput, TInputs extends Readonly<any[]>>(\n  init: (inputs$: Observable<[...TInputs]>) => Observable<TOutput>,\n  inputs: [...TInputs]\n): [TOutput, Observable<TOutput>];\nexport function useObservableAndState<TOutput, TInputs extends Readonly<any[]>>(\n  init:\n    | (() => Observable<TOutput>)\n    | ((inputs$: Observable<[...TInputs]>) => Observable<TOutput>),\n  inputs?: [...TInputs]\n): [TOutput, Observable<TOutput>] {\n  const observable$ = useObservable(init, inputs);\n  return [useObservableState(observable$), observable$];\n}\n"],"names":[],"mappings":";+BAWE,MAGA,QACgC;QAC1B,cAAc,cAAc,MAAM;SACjC,CAAC,mBAAmB,cAAc;AAAA;;"}